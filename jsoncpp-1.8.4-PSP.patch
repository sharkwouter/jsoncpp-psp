diff -ur 1.8.4/jsoncpp-1.8.4/src/lib_json/json_reader.cpp jsoncpp-1.8.4/src/lib_json/json_reader.cpp
--- 1.8.4/jsoncpp-1.8.4/src/lib_json/json_reader.cpp	2017-12-20 22:07:10.000000000 +0100
+++ jsoncpp-1.8.4/src/lib_json/json_reader.cpp	2020-05-10 00:00:17.133762364 +0200
@@ -814,7 +814,7 @@
   int line, column;
   getLocationLineAndColumn(location, line, column);
   char buffer[18 + 16 + 16 + 1];
-  snprintf(buffer, sizeof(buffer), "Line %d, Column %d", line, column);
+  sprintf(buffer, "Line %d, Column %d", line, column);
   return buffer;
 }
 
@@ -1846,7 +1846,7 @@
   int line, column;
   getLocationLineAndColumn(location, line, column);
   char buffer[18 + 16 + 16 + 1];
-  snprintf(buffer, sizeof(buffer), "Line %d, Column %d", line, column);
+  sprintf(buffer, "Line %d, Column %d", line, column);
   return buffer;
 }
 
diff -ur 1.8.4/jsoncpp-1.8.4/src/lib_json/json_writer.cpp jsoncpp-1.8.4/src/lib_json/json_writer.cpp
--- 1.8.4/jsoncpp-1.8.4/src/lib_json/json_writer.cpp	2017-12-20 22:07:10.000000000 +0100
+++ jsoncpp-1.8.4/src/lib_json/json_writer.cpp	2020-05-10 00:01:34.758619084 +0200
@@ -125,13 +125,13 @@
   int len = -1;
 
   char formatString[15];
-  snprintf(formatString, sizeof(formatString), "%%.%ug", precision);
+  sprintf(formatString, "%%.%ug", precision);
 
   // Print into the buffer. We need not request the alternative representation
   // that always has a decimal point because JSON doesn't distinguish the
   // concepts of reals and integers.
   if (isfinite(value)) {
-    len = snprintf(buffer, sizeof(buffer), formatString, value);
+    len = sprintf(buffer, formatString, value);
     fixNumericLocale(buffer, buffer + len);
 
     // try to ensure we preserve the fact that this was given to us as a double on input
@@ -142,11 +142,11 @@
   } else {
     // IEEE standard states that NaN values will not compare to themselves
     if (value != value) {
-      len = snprintf(buffer, sizeof(buffer), useSpecialFloats ? "NaN" : "null");
+      len = sprintf(buffer, useSpecialFloats ? "NaN" : "null");
     } else if (value < 0) {
-      len = snprintf(buffer, sizeof(buffer), useSpecialFloats ? "-Infinity" : "-1e+9999");
+      len = sprintf(buffer, useSpecialFloats ? "-Infinity" : "-1e+9999");
     } else {
-      len = snprintf(buffer, sizeof(buffer), useSpecialFloats ? "Infinity" : "1e+9999");
+      len = sprintf(buffer, useSpecialFloats ? "Infinity" : "1e+9999");
     }
   }
   assert(len >= 0);
